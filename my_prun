####################################################################
# FILE: my_prun
# 
# Single Author info:
# agogula Amani Gogula 
#
# LAST REVISED: 09/22/2017
#
####################################################################

#!/bin/bash

#Usage: ./my_prun [CMD]

[ $# -ne 1 ] && { echo "Usage: $0 [cmd]"; exit 1; }

# Set some variables
#Binary to run on all nodes.
CMD=$1
#Iterable list of node names
NODEFILE=nodefile1.txt
#List of node names along with port numbers
FILE=nodefile.txt
PWD=$(pwd)

# Parse $SLURM_NODELIST into an iterable list of node names
echo $SLURM_NODELIST | tr -d c | tr -d [ | tr -d ] | perl -pe 's/(\d+)-(\d+)/join(",",$1..$2)/eg' | awk 'BEGIN { RS=","} { print "c"$1 }' > $NODEFILE

# For each item in the nodefile, add randomly generated port number.
#NP holds number of nodes.
NP=0
for node in `cat $NODEFILE`; do
  randomPort=`shuf -i 1024-10491 -n 1`
  echo $node $randomPort >> $FILE 
  (( NP++ ))
done

# For each item in the nodefile, connect via ssh and run the cmd.
# The -n parameter is important or ssh will consume the rest 
# of the loop list in stdin.
# Increment rank passed to the code for each node

rank=0
for curNode in `cat $NODEFILE`; do
  ssh -n $curNode "cd $PWD;$CMD $rank $NP $FILE" & pid[$rank]=$!
  (( rank++ ))
done

#wait for each ssh / corresponding CMD to finish executing before exiting
rank=0
for curNode in `cat $NODEFILE`; do
  wait ${pid[$rank]}
  (( rank++ ))
done

rm $NODEFILE
rm $FILE
